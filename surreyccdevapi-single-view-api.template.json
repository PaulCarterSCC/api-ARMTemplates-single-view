{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    },
    "sccServiceURL": {
      "type": "string"
    }
  },
  "resources": [
    {
      "properties": {
        "description": "",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "displayName": "Single View",
        "serviceUrl": "[parameters('sccServiceURL')]",
        "path": "apis/scc/single-view",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/single-view')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "PersonID",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Retrieve a list of persons for the provided query parameters",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "person",
        "method": "GET",
        "urlTemplate": "/persons/{PersonID}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/single-view/person')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'single-view')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<set-method>POST</set-method>\r\n\t\t<set-body template=\"liquid\">\n        {\"Person\" : {\"ID\": \"{{context.Request.MatchedParameters[\"PersonID\"]}}\"}}\n        </set-body>\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/single-view/person/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'single-view', 'person')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Get details for a particular person",
        "request": {
          "queryParameters": [
            {
              "name": "firstname",
              "description": "First name of person searching for",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "surname",
              "description": "Surname of person searching for",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "dob",
              "description": "Date of Birth of person searching for",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "persons",
        "method": "GET",
        "urlTemplate": "/persons"
      },
      "name": "[concat(parameters('ApimServiceName'), '/single-view/persons')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'single-view')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<set-method>POST</set-method>\r\n\t\t<set-body template=\"liquid\">\n        {\"PersonQuery\" : {\"firstName\": \"{{context.Request.OriginalUrl.Query.firstname}}\"\n        ,\"surname\": \"{{context.Request.OriginalUrl.Query.surname}}\"\n        ,\"dob\": \"{{context.Request.OriginalUrl.Query.dob}}\"\n        }}\n        </set-body>\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/single-view/persons/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'single-view', 'persons')]"
      ]
    }
  ]
}